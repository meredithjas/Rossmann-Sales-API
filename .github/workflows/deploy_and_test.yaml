name: Deploy to Heroku

on:
  push:
    branches: [master]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Setup Pre-commit hooks
        run: |
          pip install pre-commit
          pre-commit install
      - name: Check files
        run: |
          pre-commit run --all-files

  unit-test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Unit test model
        run: |
          python3 -m unittest unit_test.py

  build:
    needs: unit-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build, Push and Release a Docker container to Heroku.
        uses: gonuit/heroku-docker-deploy@v1.3.3
        with:
          email: ${{ secrets.HEROKU_EMAIL }}

          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}

          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}

          dockerfile_directory: ./

          dockerfile_name: Dockerfile

          docker_options: "--no-cache"

          process_type: web

  integration-test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          pip install -r test/requirements.txt

      - name: Test heroku API
        env:
          HEROKU_API_LINK: ${{ secrets.HEROKU_API_LINK }}
        run: |
          cd test
          python integration_test.py
